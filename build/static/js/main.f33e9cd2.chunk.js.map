{"version":3,"sources":["theme/theme.js","components/Header/index.js","components/SearchBar/index.js","components/Job/JobCard.js","components/Job/NewJobModal.js","components/Job/ViewModal.js","firebase/config.js","App.js","index.js"],"names":["createMuiTheme","typography","fontFamily","palette","primary","main","secondary","overrides","MuiDialogActions","root","padding","MuiButton","fontWeight","textTransform","color","outlined","borderRadius","borderColor","MuiSelect","filled","MuiFilledInput","input","height","props","Box","py","bgcolor","Grid","container","justify","item","xs","display","justifyContent","Typography","variant","Button","onClick","openNewJobModal","disableElevation","useStyles","makeStyles","wrapper","backgroundColor","boxShadow","flex","margin","useState","loading","setLoading","type","location","jobSearch","setJobSearch","handleChange","e","persist","oldState","target","name","value","console","log","search","a","customfetchJobs","classes","p","mt","mb","className","Select","disableUnderline","MenuItem","disable","disableEvaluation","CircularProgress","size","theme","border","cursor","transition","borderLeft","companyName","fontSize","spacing","skillChip","alignItems","direction","title","skills","map","skill","key","postedOn","open","init","companyUrl","link","description","jobDetails","setJobDetails","handleSubmit","field","length","postJob","Dialog","newJobModal","fullWidth","DialogTitle","alignitems","IconButton","closeModal","Close","DialogContent","FilledInput","onChange","autoComplete","placeholder","fullwidth","defaultValue","pt","companyurl","multiline","rows","includes","filter","s","concat","addRemoveskill","DialogActions","width","alignItmes","Object","keys","job","format","firestore","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","setNewJobModal","viewJob","setViewJob","jobs","setJobs","customSearch","setCustomSearch","fetchJobs","collection","orderBy","get","req","tempJobs","docs","data","id","toDate","where","add","FieldValue","serverTimestamp","useEffect","ThemeProvider","Header","ViewModal","SearchBar","JobCard","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.f33e9cd2.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core\";\n\nconst primary = \"#18E1D9\";\nconst secondary = \"#0B0B15\";\n\nexport default createMuiTheme({\n  typography: {\n    fontFamily: \"Poppins, sans-serif\",\n  },\n  palette: {\n    primary: {\n      main: primary,\n    },\n    secondary: {\n      main: secondary,\n    },\n  },\n  overrides: {\n    MuiDialogActions: {\n      root: {\n        padding: \"8px 24px 16px 24px\",\n      },\n    },\n    MuiButton: {\n      root: {\n        fontWeight: 600,\n        textTransform: \"none\",\n        color: secondary,\n        padding: \"6px 24px\",\n      },\n      outlined: {\n        borderRadius: \"20px\",\n        borderColor: secondary,\n        padding: \"6px 20px\",\n      },\n    },\n    MuiSelect: {\n      filled: {\n        padding: \"15px 0 15px 15px\",\n      },\n    },\n    MuiFilledInput: {\n      input: {\n        height: \"49px\",\n        padding: \"0px 0 0 10px\",\n      },\n    },\n  },\n});\n","import React from 'react';\r\nimport {Box, Grid, Typography, Button} from '@material-ui/core';\r\n\r\n\r\n\r\nexport default (props)=> (\r\n    <Box py={10} bgcolor=\"secondary.main\" color=\"white\">\r\n        <Grid container justify=\"center\">\r\n            <Grid item xs={10}>\r\n                <Box display=\"flex\" justifyContent=\"space-between\">\r\n        <Typography variant=\"h5\">\r\n            Open Job Listings\r\n        </Typography>\r\n        <Button \r\n        onClick ={props.openNewJobModal }\r\n        variant=\"contained\" \r\n        color=\"primary\" \r\n        disableElevation>\r\n            Post a job\r\n        </Button>\r\n        </Box>\r\n        </Grid>\r\n        </Grid>\r\n        </Box>\r\n\r\n);\r\n","\r\nimport React, {useState} from 'react';\r\nimport {Box,Button,Select, MenuItem, makeStyles,CircularProgress} from '@material-ui/core';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    wrapper:{\r\n        backgroundColor:\" #fff\",\r\n        display:\"flex\",\r\n        boxShadow: \"0px 1px 5px rgba(0,0,0,0.1)\",\r\n        borderRadius:\"5px\",\r\n        \"& > * \" :{\r\n            flex: 1,\r\n            height:\"45px\",\r\n            margin:\"8px\",\r\n        },\r\n    }\r\n})\r\n\r\nexport default (props)  => {\r\n  \r\n  const [loading, setLoading]= useState(false);\r\n  const [jobSearch, setJobSearch]= useState({\r\n    type:'Full time',\r\n    location:'Remote'\r\n  });\r\n const handleChange= (e) =>{\r\n  e.persist();\r\n  setJobSearch((oldState) =>({\r\n    ...oldState,\r\n    [e.target.name]:e.target.value,\r\n\r\n  }));\r\n\r\n };\r\n console.log(jobSearch);\r\n  const search = async () =>{\r\n    \r\n    \r\n    setLoading(true);\r\n    await props.customfetchJobs(jobSearch);\r\n    setLoading(false);\r\n  }\r\n    const   classes    = useStyles();\r\n\r\n  return (\r\n  \r\n    <Box p={2} mt={-3} mb={2} className={classes.wrapper}>\r\n\r\n        <Select onClick={handleChange} value={jobSearch.type} name=\"type\" disableUnderline variant=\"filled\">\r\n        <MenuItem value=\"Full time\">Full Time</MenuItem>\r\n        <MenuItem value=\"Part time\">Part Time</MenuItem>\r\n        <MenuItem value=\"contract\">Contract</MenuItem>\r\n\r\n        </Select >\r\n        <Select onClick={handleChange}  value={jobSearch.location}  name=\"location\" disableUnderline variant=\"filled\" >\r\n        <MenuItem value=\"Remote\">Remote</MenuItem>\r\n        <MenuItem value=\"Office Job\">Office Job</MenuItem>\r\n      \r\n\r\n        </Select>\r\n       <Button disable={loading} \r\n                \r\n                variant=\"contained\" \r\n                disableEvaluation \r\n                color=\"primary\" onClick={search}>\r\n       { loading ? \r\n                    (<CircularProgress \r\n                        color=\"secondary\" \r\n                        size=\"22\"/>)\r\n                    \r\n                \r\n                :\r\n                    \"Search\"}\r\n       </Button>\r\n    </Box>\r\n    \r\n    \r\n \r\n  );\r\n};\r\n\r\n","import React from 'react';\r\nimport {Box,Button,Grid, Typography, makeStyles} from '@material-ui/core';\r\nimport {differenceInMinutes} from 'date-fns';\r\n\r\n\r\nconst skills  = [\"Javascript\", \"React.js\", \"Node.js\"];\r\n\r\nconst useStyles = makeStyles((theme) => (\r\n    {\r\n        wrapper:{\r\n            border:\"1px solid #e8e8e8e\",\r\n            cursor:\"pointer\",\r\n            transition:\".3s\",\r\n\r\n            \"&:hover\" :{\r\n               boxShadow: \"0px 5px 25px rgba(0,0,0,0.1)\",\r\n               borderLeft: \"6px solid black\",\r\n\r\n            },\r\n        },\r\n        companyName:{\r\n            fontSize:\"12\",\r\n            backgroundColor:theme.palette.primary.main,\r\n            padding:theme.spacing(0.6),\r\n            borderRadius: \"5px\",\r\n            display :\"inline-block\"\r\n\r\n        },\r\n        skillChip:{\r\n            margin:theme.spacing(0.5),\r\n            padding:theme.spacing(0.6),\r\n            borderRadius: \"5px\",\r\n            backgroundColor: theme.palette.secondary.main,\r\n            color:\"#fff\",\r\n            transition:\".3s\"\r\n        }\r\n    }\r\n)\r\n\r\n);\r\nexport default (props) =>{\r\n const classes= useStyles();\r\n    return(\r\n\r\n       \r\n        <Box p={2} className = {classes.wrapper}>\r\n        <Grid container alignItems=\"center\">\r\n        < Grid item xs container direction=\"column\" alignItems=\"flex-start\">\r\n        <Typography variant = \" subtitlel \" > {props.title} </Typography>\r\n        <Typography variant = \" subtitle2 \" className={classes.companyName} > {props.companyName} </Typography>\r\n        </Grid >\r\n        < Grid item container xs > \r\n        {\r\n            props.skills.map(\r\n                skill =>(\r\n                    <Grid className={classes.skillChip} key={skill} item>\r\n                        {skill}\r\n                        </Grid>\r\n                )\r\n            )\r\n        }\r\n        \r\n        </Grid>\r\n        < Grid item xs container direction=\"column\" alignItems=\"flex-end\">\r\n        <Typography variant =\"caption\">  { `${props.postedOn}`} | {props.type} | {props.location} </Typography>\r\n        <Button variant=\"outlined\" onClick={props.open} >Check</Button>\r\n        </Grid>\r\n        </Grid>\r\n        </Box>\r\n\r\n    );\r\n\r\n}","import React , {useState} from 'react';\r\n\r\n\r\nimport {Box,\r\n    Button,\r\n    Grid,\r\n    FilledInput, \r\n    Select, \r\n    Dialog,\r\n    DialogTitle, \r\n    DialogContent, \r\n    Typography, \r\n    makeStyles,\r\n    DialogActions,\r\n    IconButton,\r\nMenuItem,\r\nCircularProgress\r\n} \r\nfrom '@material-ui/core';\r\nimport {Close as CloseIcon} from '@material-ui/icons';\r\nconst skills  = [\"Javascript\", \"React.js\", \"Node.js\", \"Vue\", \"Firebase\", \"MongoDB\",\"SQL\"];\r\n\r\nconst useStyles = makeStyles((theme) => (\r\n    {\r\n      \r\n      \r\n        skillChip:{\r\n            margin:theme.spacing(0.5),\r\n            padding:theme.spacing(0.6),\r\n            borderRadius: \"5px\",\r\n            backgroundColor: theme.palette.secondary.main,\r\n            color:\"#fff\",\r\n            transition:\".3s\"\r\n        }\r\n    }\r\n)) ;\r\n\r\nconst init ={\r\n    \r\n        title:'',\r\n        type:'Full time',\r\n        companyName:'',\r\n        companyUrl: '',\r\n        location:'Onsite',\r\n        link:'',\r\n        \r\n       \r\n       \r\n        description:'',\r\n        skills:[]\r\n\r\n\r\n    \r\n}\r\n    export default(props) =>{\r\n        \r\n        const [loading, setLoading]= useState(false);\r\n        const [jobDetails, setJobDetails] =useState(init);\r\n        const handleChange = e =>{\r\n            \r\n            e.persist();\r\n            setJobDetails((oldState) => ({\r\n                ...oldState, [e.target.name]: e.target.value,\r\n\r\n            }));\r\n        };\r\n        console.log(jobDetails);\r\n        \r\n const addRemoveskill = (skill) => \r\n {\r\n\r\n debugger;\r\n jobDetails.skills.includes(skill) \r\n ? setJobDetails((oldState) => ({\r\n   \r\n    ...oldState, skills:oldState.skills.filter(s => s !== skill),\r\n    \r\n\r\n }))\r\n \r\n \r\n :  setJobDetails(oldState => ({\r\n    ...oldState, \r\n    skills:oldState.skills.concat(skill)\r\n }));\r\n \r\n}\r\n console.log(setJobDetails);\r\n const handleSubmit = async () =>{\r\n    for(const field in jobDetails){\r\n        debugger;\r\n        if (typeof jobDetails[field] === 'string' && !jobDetails[field])\r\n        return;\r\n\r\n    }\r\n    if(!jobDetails.skills.length) return;\r\n    setLoading(true);\r\n    await props.postJob(jobDetails);\r\n    setLoading(false);\r\n };\r\n\r\n const closeModal = () =>{\r\n\r\n    setJobDetails(init);\r\n    setLoading(false);\r\n    props.closeModal();\r\n    \r\n }\r\n \r\n        const   classes    = useStyles();\r\n        return(\r\n            <Dialog open={props.newJobModal} fullWidth>\r\n                <DialogTitle>\r\n\r\n                <Box p={3} display=\"flex\" justifyContent=\"space-between\" alignitems=\"center\"> \r\n               Post a Job\r\n                <IconButton onClick = {closeModal}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n                </Box>\r\n                </DialogTitle>\r\n                \r\n                    <DialogContent>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={6}>\r\n\r\n                                <FilledInput \r\n                                onChange= {handleChange}\r\n                                name=\"title\"\r\n                                value={jobDetails.title}\r\n                                autoComplete='off'\r\n                                fullWidth placeholder = \"Job Title\" disableUnderline fullwidth />\r\n\r\n                               \r\n                            </Grid>\r\n                            <Grid item xs={6} >\r\n\r\n                            <Select\r\n                             onChange= {handleChange}\r\n                            name=\"type\"\r\n                            value={jobDetails.type}\r\n                            fullWidth disableUnderline variant=\"filled\" defaultValue=\"Full time\">\r\n                            <MenuItem value=\"fulltime\">Full Time</MenuItem>\r\n                            <MenuItem value=\"parttime\">Part Time</MenuItem>\r\n                            <MenuItem value=\"contract\">Contract</MenuItem>\r\n\r\n        </Select >\r\n                        </Grid>\r\n                        <Grid item xs={6} pt={2}>\r\n\r\n                                <FilledInput \r\n                                 onChange= {handleChange}\r\n                                 name=\"companyName\"\r\n                                 value={jobDetails.companyName}\r\n                                autoComplete='off'\r\n                                placeholder = \"Company Name\" fullWidth disableUnderline fullwidth />\r\n\r\n                               \r\n                            </Grid>\r\n                            <Grid item xs={6} pt={2}>\r\n\r\n                                <FilledInput \r\n                                 onChange= {handleChange}\r\n                                name=\"companyUrl\"\r\n                                value={jobDetails.companyurl}\r\n                                autoComplete='off'\r\n                                placeholder = \"Company URL\" fullWidth disableUnderline fullwidth />\r\n\r\n                            </Grid>\r\n                            <Grid item xs={6} pt={2}>\r\n\r\n                            <Select  \r\n                            name=\"location\"\r\n                            onChange= {handleChange}\r\n                            value={jobDetails.location}\r\n                            fullWidth disableUnderline variant=\"filled\" defaultValue = \"Full Time\">\r\n                                <MenuItem value=\"fulltime\">Remote</MenuItem>\r\n                                    <MenuItem value=\"parttime\">Office Job</MenuItem>\r\n                                 </Select>\r\n                                        </Grid>\r\n                                        <Grid item xs={6} pt={2}>\r\n\r\n                                <FilledInput\r\n                                onChange= {handleChange}\r\n                                name=\"link\"\r\n                                value={jobDetails.link}\r\n                                autoComplete='off'\r\n                                fullWidth placeholder = \"Job Link\" disableUnderline />\r\n\r\n                               \r\n                            </Grid>\r\n                            <Grid item xs={12} >\r\n\r\n                                <FilledInput \r\n                                 onChange= {handleChange}\r\n                                name=\"description\"\r\n                                value={jobDetails.description}\r\n                                autoComplete='off'\r\n                                placeholder = \"Description\" multiline  rows={4} disableUnderline fullWidth/>\r\n\r\n                               \r\n                            </Grid>\r\n                            \r\n                        </Grid>\r\n                        <Box  className = {classes.wrapper}>\r\n                        <h5>Skills</h5>\r\n        <Grid container alignItems=\"center\">\r\n       \r\n\r\n        < Grid item container xs > \r\n        {\r\n            skills.map(\r\n                skill =>(\r\n                    <Grid onClick= {() => addRemoveskill(skill)} className={classes.skillChip} key={skill} item>\r\n                        {skill}\r\n                        </Grid>\r\n                )\r\n            )\r\n        }\r\n        \r\n        </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </Box>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                    <Box color=\"red\" width=\"100%\" display=\"flex\" justifyContent=\"space-between\" alignItmes=\"center\">\r\n                <Typography >\r\n                    *Required Fields\r\n                </Typography>\r\n                <Button disable={loading} \r\n                onClick={handleSubmit}\r\n                variant=\"contained\" \r\n                disableEvaluation \r\n                color=\"primary\">\r\n                    { loading ? \r\n                    (<CircularProgress \r\n                        color=\"secondary\" \r\n                        size=\"22\"/>)\r\n                    \r\n                \r\n                :\r\n                    (\"Post Job\")}\r\n                    </Button>\r\n\r\n                </Box>\r\n                </DialogActions>\r\n            </Dialog>\r\n           \r\n\r\n        );\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React , {useState} from 'react';\r\nimport {format} from \"date-fns\";\r\n\r\nimport {Box,\r\n    Button,\r\n    Grid,\r\n\r\n    Dialog,\r\n    DialogTitle, \r\n    DialogContent, \r\n    Typography, \r\n    IconButton,\r\n    DialogActions,\r\n    makeStyles\r\n\r\n} \r\nfrom '@material-ui/core';\r\nimport {Close as CloseIcon} from '@material-ui/icons';\r\nconst useStyles = makeStyles((theme) => (\r\n    {\r\n        wrapper:{\r\n            border:\"1px solid #e8e8e8e\",\r\n            cursor:\"pointer\",\r\n            transition:\".3s\",\r\n\r\n            \"&:hover\" :{\r\n               boxShadow: \"0px 5px 25px rgba(0,0,0,0.1)\",\r\n               borderLeft: \"6px solid black\",\r\n\r\n            },\r\n        },\r\n        companyName:{\r\n            fontSize:\"12\",\r\n            backgroundColor:theme.palette.primary.main,\r\n            padding:theme.spacing(0.6),\r\n            borderRadius: \"5px\",\r\n            display :\"inline-block\"\r\n\r\n        },\r\n        skillChip:{\r\n            margin:theme.spacing(0.5),\r\n            padding:theme.spacing(0.6),\r\n            borderRadius: \"5px\",\r\n            backgroundColor: theme.palette.secondary.main,\r\n            color:\"#fff\",\r\n            transition:\".3s\"\r\n        }\r\n    }\r\n)\r\n\r\n);\r\nexport default (props) =>(\r\n    \r\n   \r\n<Dialog open={!!Object.keys(props.job).length} fullWidth> \r\n    <DialogTitle> \r\n        <Box display=\"flex\" justifyContent = \"space-between\" alignItems = \"center\"> \r\n       {props.job.title} {props.job.companyName}\r\n        <IconButton  onClick={props.closeModal}> \r\n        < CloseIcon /> \r\n        </IconButton > \r\n        </Box >\r\n         </DialogTitle>\r\n         <DialogContent>\r\n         <Box display=\"flex\" justifyContent = \"space-between\" alignItems = \"center\"> \r\n         <Typography>\r\n            Job type \r\n         </Typography>\r\n         <Typography>\r\n            {props.job.type}\r\n         </Typography>\r\n\r\n        \r\n        \r\n        </Box >\r\n        <Box display=\"flex\" justifyContent = \"space-between\" alignItems = \"center\"> \r\n         <Typography>\r\n            Company Url\r\n         </Typography>\r\n         <Typography>\r\n            {props.job.companyUrl}\r\n         </Typography>\r\n\r\n        \r\n        \r\n        </Box >\r\n        <Box display=\"flex\" justifyContent = \"space-between\" alignItems = \"center\"> \r\n         <Typography>\r\n            Job link\r\n         </Typography>\r\n         <Typography>\r\n            {props.job.link}\r\n         </Typography>\r\n\r\n        \r\n        \r\n        </Box >\r\n        <Box display=\"flex\" justifyContent = \"space-between\" alignItems = \"center\"> \r\n         <Typography>\r\n            Job location\r\n         </Typography>\r\n         <Typography>\r\n            {props.job.location}\r\n         </Typography>\r\n\r\n        \r\n        \r\n        </Box >\r\n        <Box display=\"flex\" justifyContent = \"space-between\" alignItems = \"center\"> \r\n         <Typography>\r\n            Job skills\r\n         </Typography>\r\n          {props.job.skills}\r\n        </Box >\r\n        <Box display=\"flex\" justifyContent = \"space-between\" alignItems = \"center\"> \r\n         <Typography variant=\"caption\">\r\n            Posted On\r\n         </Typography>\r\n         {/* <Typography>\r\n         { `${props.job.postedOn}` && format(`${props.job.postedOn}`, \"DD/MM/YYYY HH:MM\")} */}\r\n         < Typography variant=\"caption\" > \r\n         {props.job.postedOn && format ( props.job.postedOn , \" dd/MMM/yyyy HH:MM\" ) } \r\n         </Typography>\r\n         {/* </Typography> */}\r\n        </Box >\r\n        \r\n         </DialogContent>\r\n         <DialogActions>\r\n\r\n         </DialogActions>\r\n         </Dialog>\r\n\r\n);\r\n     ","// Import the functions you need from the SDKs you need\r\nimport app  from \"firebase/app\";\r\nimport 'firebase/firestore'\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAEj5BmId-4jR-rSBzEiCIvYl-HJVT1Cms\",\r\n  authDomain: \"job-listing-3a9bb.firebaseapp.com\",\r\n  projectId: \"job-listing-3a9bb\",\r\n  storageBucket: \"job-listing-3a9bb.appspot.com\",\r\n  messagingSenderId: \"833290367160\",\r\n  appId: \"1:833290367160:web:a0218398db504287a7c44d\"\r\n};\r\n\r\n\r\n\r\nconst firebase = app.initializeApp(firebaseConfig);\r\nconst firestore = firebase.firestore();\r\n\r\n\r\nexport {firebase , firestore, app};\r\n","  import React, {useState,useEffect} from \"react\";\n\nimport theme from \"./theme/theme\";\nimport Header from \"./components/Header\";\nimport SearchBar from \"./components/SearchBar\";\nimport JobCard from \"./components/Job/JobCard\";\nimport NewJobModel from \"./components/Job/NewJobModal\";\nimport ViewModal from \"./components/Job/ViewModal\";\n\nimport {Close as CloseIcon} from '@material-ui/icons';\nimport  {firestore,app} from \"./firebase/config\";\n\n\nimport {Box, Grid, Typography, Button, ThemeProvider,CircularProgress } from '@material-ui/core';\n\n\nexport default () => {\n  const [newJobModal, setNewJobModal] = useState(false); \n  const [viewJob, setViewJob] = useState({}); \n  const [jobs, setJobs]= useState([]);\n  const[customSearch, setCustomSearch] = useState(false);\n  const [loading, setLoading]= useState(true);\n  const fetchJobs = async () =>{\n\n    const req = await firestore\n    .collection('jobs')\n    .orderBy('postedOn','desc')\n    .get();\n    \n   const tempJobs = req.docs.map((job)=>({\n     ...job.data(), \n     id: job.id, \n     postedOn: job.data().postedOn.toDate( )\n    }));\n  setJobs(tempJobs);\n\n  setLoading(false);\n   }; \n   \n   const customfetchJobs = async jobSearch =>{\n    \n    setLoading(true);\nsetCustomSearch(true)\n    const req = await firestore\n    .collection('jobs')\n    .orderBy('postedOn','desc')\n    .where('location','==', jobSearch.location)\n    .where('type','==', jobSearch.type)\n    .get();\n    \n   const tempJobs = req.docs.map((job)=>({\n     ...job.data(), \n     id: job.id, \n     postedOn: job.data().postedOn.toDate( )\n    }));\n  setJobs(tempJobs);\nconsole.log(tempJobs)\n  setLoading(false);\n   }; \n   \n  const postJob = async jobDetails =>{\n    await firestore.collection('jobs').add({...jobDetails,\n      postedOn: app.firestore.FieldValue.serverTimestamp() || null});\n      fetchJobs();\n  }\n   useEffect(() => {\n      fetchJobs();\n    },\n    []);\n  \n  return <ThemeProvider theme={theme}>\n <Header openNewJobModal= {() => setNewJobModal(true)}/>\n <NewJobModel \n closeModal = {\n  () =>  setNewJobModal(false)\n }\n newJobModal= {newJobModal} \n postJob={postJob}/>\n <ViewModal job={viewJob} closeModal={() => setViewJob({})}\n />\n <Grid container justify=\"center\">\n            <Grid item xs={10}>\n            <SearchBar  customfetchJobs={customfetchJobs}/>\n            {\n              loading ? (<CircularProgress />) \n              :\n             (\n              <>\n              {\n                customSearch && \n                (<Box>\n\n                  <Button onClick= {fetchJobs}>\n                    <CloseIcon />\n                    Custom Search\n                    </Button>\n                </Box>\n                )\n              }\n              {\n                 jobs.map(job => (\n                 <JobCard  open={() => setViewJob(job)} key= {job.id} {...job} />\n                 ))\n              }\n               \n               \n              \n               </>\n               )}\n           \n     \n\n            </Grid>\n</Grid>\n  </ThemeProvider>\n \n  \n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}